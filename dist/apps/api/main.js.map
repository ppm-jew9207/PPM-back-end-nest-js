{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/auth/auth.controller.ts","webpack:///./apps/api/src/app/auth/auth.module.ts","webpack:///./apps/api/src/app/auth/auth.service.ts","webpack:///./apps/api/src/app/auth/dto/login.dto.ts","webpack:///./apps/api/src/app/auth/dto/reset-password.dto.ts","webpack:///./apps/api/src/app/auth/jwt.service.ts","webpack:///./apps/api/src/app/auth/passport/jwt.strategy.ts","webpack:///./apps/api/src/app/auth/schemas/consentregistry.schema.ts","webpack:///./apps/api/src/app/auth/schemas/emailverification.schema.ts","webpack:///./apps/api/src/app/auth/schemas/forgottenpassword.schema.ts","webpack:///./apps/api/src/app/common/dto/response.dto.ts","webpack:///./apps/api/src/app/common/filters/all-exception.filter.ts","webpack:///./apps/api/src/app/common/guards/roles.guard.ts","webpack:///./apps/api/src/app/common/interceptors/logging.interceptor.ts","webpack:///./apps/api/src/app/common/interceptors/transform.interceptor.ts","webpack:///./apps/api/src/app/domains/adverts/adverts.aggregate.ts","webpack:///./apps/api/src/app/domains/adverts/adverts.controller.ts","webpack:///./apps/api/src/app/domains/adverts/adverts.module.ts","webpack:///./apps/api/src/app/domains/adverts/commands/create-advert.command.ts","webpack:///./apps/api/src/app/domains/adverts/commands/remove-advert.command.ts","webpack:///./apps/api/src/app/domains/adverts/commands/update-advert.command.ts","webpack:///./apps/api/src/app/domains/adverts/events/advert-created.event.ts","webpack:///./apps/api/src/app/domains/adverts/events/advert-removed.event.ts","webpack:///./apps/api/src/app/domains/adverts/events/advert-updated.event.ts","webpack:///./apps/api/src/app/domains/domains.module.ts","webpack:///./apps/api/src/app/domains/permissions/commands/create-permission.command.ts","webpack:///./apps/api/src/app/domains/permissions/commands/remove-permission.command.ts","webpack:///./apps/api/src/app/domains/permissions/commands/update-permission.command.ts","webpack:///./apps/api/src/app/domains/permissions/events/permission-created.event.ts","webpack:///./apps/api/src/app/domains/permissions/events/permission-removed.event.ts","webpack:///./apps/api/src/app/domains/permissions/events/permission-updated.event.ts","webpack:///./apps/api/src/app/domains/permissions/permissions.aggregate.ts","webpack:///./apps/api/src/app/domains/permissions/permissions.module.ts","webpack:///./apps/api/src/app/domains/settings/commands/create-setting.command.ts","webpack:///./apps/api/src/app/domains/settings/commands/remove-setting.command.ts","webpack:///./apps/api/src/app/domains/settings/commands/update-setting.command.ts","webpack:///./apps/api/src/app/domains/settings/events/setting-created.event.ts","webpack:///./apps/api/src/app/domains/settings/events/setting-removed.event.ts","webpack:///./apps/api/src/app/domains/settings/events/setting-updated.event.ts","webpack:///./apps/api/src/app/domains/settings/settings.aggregate.ts","webpack:///./apps/api/src/app/domains/settings/settings.controller.ts","webpack:///./apps/api/src/app/domains/settings/settings.module.ts","webpack:///./apps/api/src/app/domains/userProfiles/commands/create-user-profile.command.ts","webpack:///./apps/api/src/app/domains/userProfiles/commands/delete-user-profile.command.ts","webpack:///./apps/api/src/app/domains/userProfiles/commands/update-user-profile.command.ts","webpack:///./apps/api/src/app/domains/userProfiles/events/user-profile-created.event.ts","webpack:///./apps/api/src/app/domains/userProfiles/events/user-profile-deleted.event.ts","webpack:///./apps/api/src/app/domains/userProfiles/events/user-profile-updated.event.ts","webpack:///./apps/api/src/app/domains/userProfiles/user-profiles.aggregate.ts","webpack:///./apps/api/src/app/domains/userProfiles/user-profiles.controller.ts","webpack:///./apps/api/src/app/domains/userProfiles/user-profiles.module.ts","webpack:///./apps/api/src/app/helpers/constants.ts","webpack:///./apps/api/src/app/models/adverts/adverts.module.ts","webpack:///./apps/api/src/app/models/adverts/adverts.schema.ts","webpack:///./apps/api/src/app/models/adverts/adverts.service.ts","webpack:///./apps/api/src/app/models/adverts/dtos/create-advert.dto.ts","webpack:///./apps/api/src/app/models/adverts/dtos/update-advert.dto.ts","webpack:///./apps/api/src/app/models/permissions/permissions.module.ts","webpack:///./apps/api/src/app/models/permissions/permissions.schema.ts","webpack:///./apps/api/src/app/models/permissions/permissions.service.ts","webpack:///./apps/api/src/app/models/settings/dtos/create-setting.dto.ts","webpack:///./apps/api/src/app/models/settings/dtos/update-setting.dto.ts","webpack:///./apps/api/src/app/models/settings/settings.module.ts","webpack:///./apps/api/src/app/models/settings/settings.schema.ts","webpack:///./apps/api/src/app/models/settings/settings.service.ts","webpack:///./apps/api/src/app/models/userProfiles/dto/create-user-profile-payload.dto.ts","webpack:///./apps/api/src/app/models/userProfiles/dto/update-user-profile-payload.dto.ts","webpack:///./apps/api/src/app/models/userProfiles/user-profile.module.ts","webpack:///./apps/api/src/app/models/userProfiles/user-profile.schema.ts","webpack:///./apps/api/src/app/models/userProfiles/user-profile.service.ts","webpack:///./apps/api/src/app/models/users/dto/create-user.dto.ts","webpack:///./apps/api/src/app/models/users/dto/settings.dto.ts","webpack:///./apps/api/src/app/models/users/dto/user.dto.ts","webpack:///./apps/api/src/app/models/users/user.interface.ts","webpack:///./apps/api/src/app/models/users/user.schema.ts","webpack:///./apps/api/src/app/models/users/users.module.ts","webpack:///./apps/api/src/app/models/users/users.service.ts","webpack:///./apps/api/src/app/sagas/adverts.sagas.ts","webpack:///./apps/api/src/app/sagas/sagas.module.ts","webpack:///./apps/api/src/app/sagas/user-profiles.sagas.ts","webpack:///./apps/api/src/app/view/adverts/adverts.controller.ts","webpack:///./apps/api/src/app/view/adverts/adverts.module.ts","webpack:///./apps/api/src/app/view/adverts/handlers/created-advert.handler.ts","webpack:///./apps/api/src/app/view/adverts/handlers/index.ts","webpack:///./apps/api/src/app/view/adverts/handlers/removed-advert.handler.ts","webpack:///./apps/api/src/app/view/adverts/handlers/updated-advert.handler.ts","webpack:///./apps/api/src/app/view/adverts/queries/handlers/get-advert.handler.ts","webpack:///./apps/api/src/app/view/adverts/queries/handlers/get-adverts.handler.ts","webpack:///./apps/api/src/app/view/adverts/queries/handlers/index.ts","webpack:///./apps/api/src/app/view/permissions/handlers/created-permission.handler.ts","webpack:///./apps/api/src/app/view/permissions/handlers/index.ts","webpack:///./apps/api/src/app/view/permissions/handlers/removed-permission.handler.ts","webpack:///./apps/api/src/app/view/permissions/handlers/updated-permission.handler.ts","webpack:///./apps/api/src/app/view/permissions/permissions.module.ts","webpack:///./apps/api/src/app/view/settings/handlers/created-setting.handler.ts","webpack:///./apps/api/src/app/view/settings/handlers/index.ts","webpack:///./apps/api/src/app/view/settings/handlers/removed-setting.handler.ts","webpack:///./apps/api/src/app/view/settings/handlers/updated-setting.handler.ts","webpack:///./apps/api/src/app/view/settings/queries/handlers/get-setting.handler.ts","webpack:///./apps/api/src/app/view/settings/queries/handlers/get-settings.handler.ts","webpack:///./apps/api/src/app/view/settings/queries/handlers/index.ts","webpack:///./apps/api/src/app/view/settings/settings.controller.ts","webpack:///./apps/api/src/app/view/settings/settings.module.ts","webpack:///./apps/api/src/app/view/userProfiles/handlers/created-user-profile.handler.ts","webpack:///./apps/api/src/app/view/userProfiles/handlers/deleted-user-profile.handler.ts","webpack:///./apps/api/src/app/view/userProfiles/handlers/index.ts","webpack:///./apps/api/src/app/view/userProfiles/handlers/updated-user-profile.handler.ts","webpack:///./apps/api/src/app/view/userProfiles/queries/get-user-profile-by-email.handler.ts","webpack:///./apps/api/src/app/view/userProfiles/queries/get-user-profile-by-id.handler.ts","webpack:///./apps/api/src/app/view/userProfiles/queries/get-user-profiles.handlers.ts","webpack:///./apps/api/src/app/view/userProfiles/queries/index.ts","webpack:///./apps/api/src/app/view/userProfiles/user-profiles.controller.ts","webpack:///./apps/api/src/app/view/userProfiles/user-profiles.module.ts","webpack:///./apps/api/src/app/view/view.module.ts","webpack:///./apps/api/src/main.ts","webpack:///./libs/common/main/src/index.ts","webpack:///./libs/common/main/src/lib/common-main.ts","webpack:///./libs/common/main/src/lib/roles.ts","webpack:///./libs/common/main/src/lib/routes-path.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/cqrs\"","webpack:///external \"@nestjs/mongoose\"","webpack:///external \"@nestjs/passport\"","webpack:///external \"@nestjs/serve-static\"","webpack:///external \"@nestjs/swagger\"","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"express-rate-limit\"","webpack:///external \"helmet\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongoose\"","webpack:///external \"nodemailer\"","webpack:///external \"passport-jwt\"","webpack:///external \"path\"","webpack:///external \"rxjs/operators\"","webpack:///external \"tslib\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DomainsModule } from './domains/domains.module';\nimport { ViewModule } from './view/view.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModelModule } from './models/users/users.module';\nimport { RolesGuard } from './common/guards/roles.guard';\nimport { SagasModule } from './sagas/sagas.module';\nimport { ServeStaticModule } from '@nestjs/serve-static'; // <- INSERT LINE\nimport { join } from 'path'; // <- INSERT LINE\n\nconst domains = [DomainsModule];\nconst view = [ViewModule];\n\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'nx-app'),\n      exclude: ['/api*']\n    }),\n    ...domains,\n    ...view,\n    MongooseModule.forRoot(process.env.MONGO_DB),\n    UsersModelModule,\n    AuthModule,\n    SagasModule\n  ],\n  controllers: [AppController],\n  providers: [AppService, RolesGuard],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to api!' };\n  }\n}\n","import {\n  Controller,\n  Post,\n  HttpStatus,\n  HttpCode,\n  Get,\n  Body,\n  Param\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { Login } from './interfaces/login.interface';\nimport { ResponseSuccess, ResponseError } from '../common/dto/response.dto';\nimport { IResponse } from '../common/interfaces/response.interface';\nimport { CreateUserDto } from '../models/users/dto/create-user.dto';\nimport { UsersService } from '../models/users/users.service';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { PrivateRoutesPath } from '@ppm/common/main';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller(PrivateRoutesPath.AUTH)\n@ApiTags(PrivateRoutesPath.AUTH)\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly userService: UsersService\n  ) {}\n\n  @Post(PrivateRoutesPath.POST_LOGIN)\n  @HttpCode(HttpStatus.OK)\n  public async login(@Body() login: LoginDto): Promise<IResponse> {\n    try {\n      const response = await this.authService.validateLogin(\n        login.email,\n        login.password\n      );\n      return new ResponseSuccess('LOGIN.SUCCESS', response);\n    } catch (error) {\n      return new ResponseError('LOGIN.ERROR', error);\n    }\n  }\n\n  @Post(PrivateRoutesPath.POST_REGISTRY)\n  @HttpCode(HttpStatus.OK)\n  async register(@Body() createUserDto: CreateUserDto): Promise<IResponse> {\n    try {\n      const newUser = await this.userService.createNewUser(createUserDto);\n      await this.authService.createEmailToken(newUser.email);\n\n      await this.authService.saveUserConsent(newUser.email);\n      const sent = await this.authService.sendEmailVerification(newUser.email);\n      if (sent) {\n        return new ResponseSuccess('REGISTRATION.USER_REGISTERED_SUCCESSFULLY');\n      } else {\n        return new ResponseError('REGISTRATION.ERROR.MAIL_NOT_SENT');\n      }\n    } catch (error) {\n      return new ResponseError('REGISTRATION.ERROR.GENERIC_ERROR', error);\n    }\n  }\n\n  @Get(PrivateRoutesPath.POST_VERIFY)\n  public async verifyEmail(@Param('code') code: string): Promise<IResponse> {\n    try {\n      const isEmailVerified = await this.authService.verifyEmail(code);\n      return new ResponseSuccess('LOGIN.EMAIL_VERIFIED', isEmailVerified);\n    } catch (error) {\n      return new ResponseError('LOGIN.ERROR', error);\n    }\n  }\n\n  @Get(PrivateRoutesPath.POST_RESEND_VERIFY)\n  public async sendEmailVerification(@Param() params): Promise<IResponse> {\n    try {\n      await this.authService.createEmailToken(params.email);\n      const isEmailSent = await this.authService.sendEmailVerification(\n        params.email\n      );\n      if (isEmailSent) {\n        return new ResponseSuccess('LOGIN.EMAIL_RESENT', null);\n      } else {\n        return new ResponseError('REGISTRATION.ERROR.MAIL_NOT_SENT');\n      }\n    } catch (error) {\n      return new ResponseError('LOGIN.ERROR.SEND_EMAIL', error);\n    }\n  }\n\n  @Get(PrivateRoutesPath.POST_FORGOT_PASSWORD)\n  public async sendEmailForgotPassword(@Param() params): Promise<IResponse> {\n    try {\n      const isEmailSent = await this.authService.sendEmailForgotPassword(\n        params.email\n      );\n      if (isEmailSent) {\n        return new ResponseSuccess('LOGIN.EMAIL_RESENT', null);\n      } else {\n        return new ResponseError('REGISTRATION.ERROR.MAIL_NOT_SENT');\n      }\n    } catch (error) {\n      return new ResponseError('LOGIN.ERROR.SEND_EMAIL', error);\n    }\n  }\n\n  @Post(PrivateRoutesPath.POST_RESET_PASSWORD)\n  @HttpCode(HttpStatus.OK)\n  public async setNewPassord(\n    @Body() resetPassword: ResetPasswordDto\n  ): Promise<IResponse> {\n    try {\n      let isNewPasswordChanged = false;\n      if (resetPassword.email && resetPassword.currentPassword) {\n        const isValidPassword = await this.authService.checkPassword(\n          resetPassword.email,\n          resetPassword.currentPassword\n        );\n        if (isValidPassword) {\n          isNewPasswordChanged = await this.userService.setPassword(\n            resetPassword.email,\n            resetPassword.newPassword\n          );\n        } else {\n          return new ResponseError('RESET_PASSWORD.WRONG_CURRENT_PASSWORD');\n        }\n      } else if (resetPassword.newPasswordToken) {\n        const forgottenPasswordModel = await this.authService.getForgottenPasswordModel(\n          resetPassword.newPasswordToken\n        );\n        isNewPasswordChanged = await this.userService.setPassword(\n          forgottenPasswordModel.email,\n          resetPassword.newPassword\n        );\n        if (isNewPasswordChanged) await forgottenPasswordModel.remove();\n      } else {\n        return new ResponseError('RESET_PASSWORD.CHANGE_PASSWORD_ERROR');\n      }\n      return new ResponseSuccess(\n        'RESET_PASSWORD.PASSWORD_CHANGED',\n        isNewPasswordChanged\n      );\n    } catch (error) {\n      return new ResponseError('RESET_PASSWORD.CHANGE_PASSWORD_ERROR', error);\n    }\n  }\n}\n","import {\n  Module,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport { AuthController } from './auth.controller';\nimport { UserSchema } from '../models/users/user.schema';\nimport { EmailVerificationSchema } from '../auth/schemas/emailverification.schema';\nimport { ForgottenPasswordSchema } from './schemas/forgottenpassword.schema';\nimport { ConsentRegistrySchema } from './schemas/consentregistry.schema';\nimport { UsersService } from '../models/users/users.service';\nimport { JWTService } from './jwt.service';\nimport { MongooseModule } from '@nestjs/mongoose';\n// import { LoggerMiddleware } from '../common/middlewares/logger.middleware';\nimport { ViewModels } from '../helpers/constants';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [\n    PassportModule,\n    MongooseModule.forFeature([\n    { name: 'User', schema: UserSchema },\n    { name: ViewModels.EMAIL_VERIFICATION, schema: EmailVerificationSchema },\n    { name: ViewModels.FORGOTTEN_PASSWORD, schema: ForgottenPasswordSchema },\n    { name: ViewModels.CONSENT_REGISTRY, schema: ConsentRegistrySchema },\n  ])],\n  controllers: [AuthController],\n  providers: [AuthService, UsersService, JWTService, JwtStrategy],\n})\nexport class AuthModule {}\n","import * as bcrypt from 'bcryptjs';\nimport * as nodemailer from 'nodemailer';\nimport {\n  Injectable,\n  HttpException,\n  HttpStatus,\n  HttpService\n} from '@nestjs/common';\nimport { JWTService } from './jwt.service';\nimport { Model } from 'mongoose';\nimport { User } from '../models/users/user.interface';\nimport { UserDto } from '../models/users/dto/user.dto';\nimport { EmailVerification } from './interfaces/emailverification.interface';\nimport { ForgottenPassword } from './interfaces/forgottenpassword.interface';\nimport { ConsentRegistry } from './interfaces/consentregistry.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ViewModels } from '../helpers/constants';\n\nconst transporter = nodemailer.createTransport({\n  host: process.env.MAIL_HOST,\n  port: process.env.MAIL_PORT,\n  secure: process.env.MAIL_SECURE === 'true', // true for 465, false for other ports\n  auth: {\n    user: process.env.MAIL_SERVER_USER,\n    pass: process.env.MAIL_SERVER_PASS\n  }\n});\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectModel('User') private readonly userModel: Model<User>,\n    @InjectModel(ViewModels.EMAIL_VERIFICATION)\n    private readonly emailVerificationModel: Model<EmailVerification>,\n    @InjectModel(ViewModels.FORGOTTEN_PASSWORD)\n    private readonly forgottenPasswordModel: Model<ForgottenPassword>,\n    @InjectModel(ViewModels.CONSENT_REGISTRY)\n    private readonly consentRegistryModel: Model<ConsentRegistry>,\n    private readonly jwtService: JWTService\n  ) {}\n\n  async validateLogin(email, password) {\n    const userFromDb = await this.userModel.findOne({ email: email });\n    if (!userFromDb)\n      throw new HttpException('LOGIN.USER_NOT_FOUND', HttpStatus.NOT_FOUND);\n    if (!userFromDb.auth.email.valid)\n      throw new HttpException('LOGIN.EMAIL_NOT_VERIFIED', HttpStatus.FORBIDDEN);\n\n    const isValidPass = await bcrypt.compare(password, userFromDb.password);\n\n    if (isValidPass) {\n      const accessToken = await this.jwtService.createToken(\n        email,\n        userFromDb.roles\n      );\n      return { token: accessToken, user: new UserDto(userFromDb) };\n    } else {\n      throw new HttpException('LOGIN.ERROR', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  async createEmailToken(email: string): Promise<boolean> {\n    const emailVerification = await this.emailVerificationModel.findOne({\n      email: email\n    });\n    if (\n      emailVerification &&\n      (new Date().getTime() - emailVerification.timestamp.getTime()) / 60000 <\n        15\n    ) {\n      throw new HttpException(\n        'LOGIN.EMAIL_SENDED_RECENTLY',\n        HttpStatus.INTERNAL_SERVER_ERROR\n      );\n    } else {\n      await this.emailVerificationModel.findOneAndUpdate(\n        { email: email },\n        {\n          email: email,\n          emailToken: String(Math.floor(Math.random() * 9000000) + 1000000), //Generate 7 digits number\n          timestamp: new Date()\n        },\n        { upsert: true }\n      );\n      return true;\n    }\n  }\n\n  async saveUserConsent(email: string): Promise<ConsentRegistry> {\n    try {\n      const http = new HttpService();\n\n      const newConsent = new this.consentRegistryModel();\n      newConsent.email = email;\n      newConsent.date = new Date();\n      newConsent.registrationForm = [\n        'firstName',\n        'lastName',\n        'email',\n        'birthday date',\n        'password'\n      ];\n      newConsent.checkboxText = 'I accept privacy policy';\n      const privacyPolicyResponse: any = await http\n        .get('https://www.XXXXXX.com/api/privacy-policy')\n        .toPromise();\n      newConsent.privacyPolicy = privacyPolicyResponse.data.content;\n      const cookiePolicyResponse: any = await http\n        .get('https://www.XXXXXX.com/api/privacy-policy')\n        .toPromise();\n      newConsent.cookiePolicy = cookiePolicyResponse.data.content;\n      newConsent.acceptedPolicy = 'Y';\n      return await newConsent.save();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async createForgottenPasswordToken(\n    email: string\n  ): Promise<ForgottenPassword> {\n    const forgottenPassword = await this.forgottenPasswordModel.findOne({\n      email: email\n    });\n    if (\n      forgottenPassword &&\n      (new Date().getTime() - forgottenPassword.timestamp.getTime()) / 60000 <\n        15\n    ) {\n      throw new HttpException(\n        'RESET_PASSWORD.EMAIL_SENDED_RECENTLY',\n        HttpStatus.INTERNAL_SERVER_ERROR\n      );\n    } else {\n      const forgottenPasswordModel = await this.forgottenPasswordModel.findOneAndUpdate(\n        { email: email },\n        {\n          email: email,\n          newPasswordToken: String(\n            Math.floor(Math.random() * 9000000) + 1000000\n          ), //Generate 7 digits number,\n          timestamp: new Date()\n        },\n        { upsert: true, new: true }\n      );\n      if (forgottenPasswordModel) {\n        return forgottenPasswordModel;\n      } else {\n        throw new HttpException(\n          'LOGIN.ERROR.GENERIC_ERROR',\n          HttpStatus.INTERNAL_SERVER_ERROR\n        );\n      }\n    }\n  }\n\n  async verifyEmail(token: string): Promise<boolean> {\n    const emailVerif = await this.emailVerificationModel.findOne({\n      emailToken: token\n    });\n    if (emailVerif && emailVerif.email) {\n      const userFromDb = await this.userModel.findOne({\n        email: emailVerif.email\n      });\n      if (userFromDb) {\n        userFromDb.auth.email.valid = true;\n        const savedUser = await userFromDb.save();\n        await emailVerif.remove();\n        return !!savedUser;\n      }\n    } else {\n      throw new HttpException(\n        'LOGIN.EMAIL_CODE_NOT_VALID',\n        HttpStatus.FORBIDDEN\n      );\n    }\n  }\n\n  async getForgottenPasswordModel(\n    newPasswordToken: string\n  ): Promise<ForgottenPassword> {\n    return await this.forgottenPasswordModel.findOne({\n      newPasswordToken: newPasswordToken\n    });\n  }\n\n  async sendEmailVerification(email: string): Promise<boolean> {\n    const model = await this.emailVerificationModel.findOne({ email: email });\n\n    if (model && model.emailToken) {\n      const url = `http://${process.env.HOST}:${process.env.PORT}/api/auth/email/verify/${model.emailToken}`;\n      const mailOptions = {\n        from: process.env.MAIL_SERVER_USER,\n        to: email, // list of receivers (separated by ,)\n        subject: 'Registracijos patvirtinimas',\n        text: 'Registracijos patvirtinima',\n        html:\n          '<b>Sveiki, Registracijos patvirtinimas <br><a href=' +\n          url +\n          '>Patvirtinti  registracija</a></b>'\n      };\n\n      const sent = await new Promise<boolean>(async function(resolve, reject) {\n        return await transporter.sendMail(mailOptions, async (error, info) => {\n          if (error) {\n            console.log('Message sent: %s', error);\n            return reject(false);\n          }\n          console.log('Message sent: %s', info.messageId);\n          resolve(true);\n        });\n      });\n      console.log(sent);\n\n      return sent;\n    } else {\n      throw new HttpException(\n        'REGISTER.USER_NOT_REGISTERED',\n        HttpStatus.FORBIDDEN\n      );\n    }\n  }\n\n  async checkPassword(email: string, password: string) {\n    const userFromDb = await this.userModel.findOne({ email: email });\n    if (!userFromDb)\n      throw new HttpException('LOGIN.USER_NOT_FOUND', HttpStatus.NOT_FOUND);\n\n    return await bcrypt.compare(password, userFromDb.password);\n  }\n\n  async sendEmailForgotPassword(email: string): Promise<boolean> {\n    const userFromDb = await this.userModel.findOne({ email: email });\n    if (!userFromDb)\n      throw new HttpException('LOGIN.USER_NOT_FOUND', HttpStatus.NOT_FOUND);\n\n    const tokenModel = await this.createForgottenPasswordToken(email);\n\n    if (tokenModel && tokenModel.newPasswordToken) {\n      const url = `http://${process.env.HOST}:${process.env.PORT}/api/auth/email/reset-password/${tokenModel.newPasswordToken}`;\n      const mailOptions = {\n        from: process.env.MAIL_SERVER_USER,\n        to: email, // list of receivers (separated by ,)\n        subject: 'Slaptažodžio keitimas',\n        text: 'Slaptažodžio keitimas',\n        html:\n          '<b>Sveiki, Jei norite pakeisti slaptažodį spauskite <a href=' +\n          url +\n          '>čia</a></b>'\n      };\n      const sended = await new Promise<boolean>(async function(\n        resolve,\n        reject\n      ) {\n        return await transporter.sendMail(mailOptions, async (error, info) => {\n          if (error) {\n            console.log('Message sent: %s', error);\n            return reject(false);\n          }\n          console.log('Message sent: %s', info.messageId);\n          resolve(true);\n        });\n      });\n\n      return sended;\n    } else {\n      throw new HttpException(\n        'REGISTER.USER_NOT_REGISTERED',\n        HttpStatus.FORBIDDEN\n      );\n    }\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { Login } from '../interfaces/login.interface';\n\nexport class LoginDto implements Login {\n  @ApiProperty()\n  readonly email: string;\n  @ApiProperty()\n  readonly password: string;\n}","export class ResetPasswordDto {\n  readonly email: string;\n  readonly newPassword: string;\n  readonly newPasswordToken: string;\n  readonly currentPassword: string;\n}","import * as jwt from 'jsonwebtoken';\nimport { Injectable} from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { User } from '../models/users/user.interface';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class JWTService {\n  constructor(@InjectModel('User') private readonly userModel: Model<User>) {}\n\n\n  async createToken(email, roles) {\n    const expiresIn = process.env.JWT_EXPIRES_IN,\n      secretOrKey = process.env.JWT_SECRET;\n    const userInfo = { email: email, roles: roles};\n    const token = jwt.sign(userInfo, secretOrKey, { expiresIn });\n    return {\n      expiresIn: expiresIn,\n      token: token,\n    };\n  }\n\n  async validateUser(signedUser): Promise<User> {\n    const userFromDb = await this.userModel.findOne({ email: signedUser.email});\n    if (userFromDb) {\n        return userFromDb;\n    }\n    return null;\n  }\n\n\n}\n","import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JWTService } from '../jwt.service';\nimport { PassportStrategy } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly jwtService: JWTService) {\n    super(\n      {\n        jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n        passReqToCallback: true,\n        secretOrKey: process.env.JWT_SECRET,\n        ignoreExpiration: false\n      }\n      // async (req, payload, next) => await this.verify(req, payload, next),\n    );\n    // passport.use(this);\n  }\n\n  public async validate(payload: any, req: any, next: Function) {\n    const user = await this.jwtService.validateUser(req);\n\n    if (!user) {\n      return next(new UnauthorizedException(), false);\n    }\n    next(null, user);\n  }\n}\n","import * as mongoose from 'mongoose';\n\nexport const ConsentRegistrySchema = new mongoose.Schema({\n  email: String,\n  registrationForm: [Array],\n  checkboxText: String,\n  date: Date,\n  privacyPolicy: String,\n  cookiePolicy: String,\n  acceptedPolicy: String\n});","import * as mongoose from 'mongoose';\n\nexport const EmailVerificationSchema = new mongoose.Schema({\n  email: String,\n  emailToken: String,\n  timestamp: Date\n});","import * as mongoose from 'mongoose';\n\nexport const ForgottenPasswordSchema = new mongoose.Schema({\n  email: String,\n  newPasswordToken: String,\n  timestamp: Date\n});","// success: true => message, data\n// success: false => errorMessage, error\nimport { IResponse } from '../interfaces/response.interface';\n\nexport class ResponseError implements IResponse{\n  constructor (infoMessage:string, data?: any) {\n    this.success = false;\n    this.message = infoMessage;\n    this.data = data;\n    console.warn(new Date().toString() + ' - [Response]: ' + infoMessage + (data ? ' - ' + JSON.stringify(data): ''));\n  };\n  message: string;\n  data: any[];\n  errorMessage: any;\n  error: any;\n  success: boolean;\n}\n\nexport class ResponseSuccess implements IResponse{\n  constructor (infoMessage:string, data?: any, notLog?: boolean) {\n    this.success = true;\n    this.message = infoMessage;\n    this.data = data;\n    if(!notLog) {\n      try {\n        var offuscateRequest = JSON.parse(JSON.stringify(data));\n        if(offuscateRequest && offuscateRequest.token) offuscateRequest.token = \"*******\";\n        console.log(new Date().toString() + ' - [Response]: ' + JSON.stringify(offuscateRequest))\n      } catch(error){}\n    };\n  };\n  message: string;\n  data: any[];\n  errorMessage: any;\n  error: any;\n  success: boolean;\n}","import { ExceptionFilter, Catch, ArgumentsHost, HttpStatus } from '@nestjs/common';\nimport { HttpException } from '@nestjs/common';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  catch(exception: Error, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    let status = (exception instanceof HttpException) ? exception.getStatus(): HttpStatus.INTERNAL_SERVER_ERROR;\n\n    // if (status === HttpStatus.UNAUTHORIZED) \n    //     return response.status(status).render('views/401');\n    // if (status === HttpStatus.NOT_FOUND) \n    //     return response.status(status).render('views/404');\n    // if (status === HttpStatus.INTERNAL_SERVER_ERROR) {\n    //     if (process.env.NODE_ENV === 'production') {\n    //       console.error(error.stack);\n    //       return response.status(status).render('views/500');\n    //     }\n    //     else {\n    //       let message = error.stack;\n    //       return response.status(status).send(message); \n    //     } \n    // }\n\n    console.error(exception.stack);\n\n    response\n      .status(status)\n      .json({\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n      });\n  }\n}","import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(\n    context: ExecutionContext\n  ): boolean | Promise<boolean> | Observable<boolean> {\n    const roles = this.reflector.get<string[]>('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n\n    const req = context.switchToHttp().getRequest();\n    const user = req.user;\n\n    const hasRole = () => user.roles.some(role => roles.indexOf(role) > -1);\n    let hasPermission = false;\n    console.log(hasRole());\n\n    if (hasRole()) {\n      hasPermission = true;\n      if (req.params.email || req.body.email) {\n        if (\n          req.user.email != req.params.email &&\n          req.user.email != req.body.email\n        ) {\n          hasPermission = false;\n        }\n      }\n    }\n    return user && user.roles && hasPermission;\n  }\n}\n","import { Injectable, NestInterceptor, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { CallHandler } from '@nestjs/common';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable<any> {\n  \n    const now = Date.now();\n    console.log(`After... ${Date.now() - now}ms`)\n    return next\n      .handle()\n      .pipe();  \n  }\n}","import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable<any> {\n    return next\n      .handle()\n      .pipe(map(data => ({ data })));\n  }\n}\n","import { AggregateRoot } from '@nestjs/cqrs';\nimport { Types } from 'mongoose';\n\nexport class AdvertsAggregate extends AggregateRoot {\n  _id: Types.ObjectId;\n}\n","import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  Param,\n  UseGuards,\n  UseInterceptors,\n  Req,\n  BadRequestException,\n} from '@nestjs/common';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateAdvert } from './commands/create-advert.command';\nimport { RemoveAdvert } from './commands/remove-advert.command';\nimport { UpdateAdvert } from './commands/update-advert.command';\nimport { UpdateAdvertPayloadDto } from '../../models/adverts/dtos/update-advert.dto';\nimport { CreateAdvertPayloadDto } from '../../models/adverts/dtos/create-advert.dto';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggingInterceptor } from '../../common/interceptors/logging.interceptor';\nimport { TransformInterceptor } from '../../common/interceptors/transform.interceptor';\nimport { PrivateRoutesPath, Roles } from '@ppm/common/main';\n\n@Controller(PrivateRoutesPath.ADVERTS)\n@ApiTags(PrivateRoutesPath.ADVERTS)\n@ApiBearerAuth('JWT')\n@UseGuards(AuthGuard('jwt'))\n@UseInterceptors(LoggingInterceptor, TransformInterceptor)\nexport class AdvertsController {\n  constructor(private readonly commandBus: CommandBus) {}\n\n  @Post()\n  async create(@Body() dto: CreateAdvertPayloadDto, @Req() request: any) {\n    const user = request.user;\n    if (!user.roles.includes(Roles.MENTOR)) {\n      throw new BadRequestException(\n        `You don't have permissions to create the advert`\n      );\n    }\n\n    return this.commandBus.execute(new CreateAdvert(dto, user));\n  }\n\n  @Post(PrivateRoutesPath.POST_UPDATE)\n  @HttpCode(HttpStatus.OK)\n  async updates(\n    @Param('id') id: string,\n    @Body() updateAdvertPayload: UpdateAdvertPayloadDto\n  ): Promise<boolean> {\n    return this.commandBus.execute(\n      new UpdateAdvert({ id, ...updateAdvertPayload })\n    );\n  }\n\n  @Post(PrivateRoutesPath.POST_DELETE)\n  @HttpCode(HttpStatus.OK)\n  async remove(@Param('id') id: string) {\n    return this.commandBus.execute(new RemoveAdvert({ id }));\n  }\n}\n","\nimport { Module } from '@nestjs/common';\nimport { CqrsModule } from '@nestjs/cqrs';\n\nimport { AdvertsController } from './adverts.controller';\n\nimport { AdvertsModelModule } from '../../models/adverts/adverts.module';\nimport { RemoveAdvertHandler } from './commands/remove-advert.command';\nimport { CreateAdvertHandler } from './commands/create-advert.command';\nimport { UpdateAdvertHandler } from './commands/update-advert.command';\nimport { UsersModelModule } from '../../models/users/users.module';\n\nconst commandHandlers = [CreateAdvertHandler, RemoveAdvertHandler, UpdateAdvertHandler];\n\n@Module({\n  imports: [CqrsModule, AdvertsModelModule, UsersModelModule],\n  controllers: [AdvertsController],\n  providers: [...commandHandlers],\n})\nexport class AdvertsDomainModule {}","import { AdvertsAggregate } from '../adverts.aggregate';\nimport { Types } from 'mongoose';\nimport { ICommandHandler, EventPublisher, CommandHandler } from '@nestjs/cqrs';\nimport { CreateAdvertPayloadDto } from '../../../models/adverts/dtos/create-advert.dto';\nimport { Inject, BadRequestException } from '@nestjs/common';\nimport { AdvertCreated } from '../events/advert-created.event';\nimport { User } from '../../../models/users/user.interface';\nimport { CreateAdvertPayload } from '../../../models/adverts/adverts.interface';\nimport { UsersService } from '../../../models/users/users.service';\n\nexport class CreateAdvert {\n  constructor(public data: CreateAdvertPayloadDto, public user: User) {}\n}\n@CommandHandler(CreateAdvert)\nexport class CreateAdvertHandler implements ICommandHandler<CreateAdvert> {\n  @Inject() private readonly _publisher: EventPublisher;\n  @Inject() private readonly _usersService: UsersService;\n\n  async execute({ data, user }: CreateAdvert) {\n\n    const userFromDB = await this._usersService.getById(user._id.toHexString());\n    if (!userFromDB) {\n      throw new BadRequestException(`This user doesn't exist`);\n    }\n\n    if (!data.title) {\n      throw new BadRequestException('Title is required!');\n    }\n    \n    const advertData: CreateAdvertPayload = {...data, creator: {_id: userFromDB._id, name: userFromDB.userName}}\n    const aggregate = new AdvertsAggregate();\n    const id = new Types.ObjectId().toHexString();\n    aggregate.apply(new AdvertCreated(id, advertData));\n    const advert = this._publisher.mergeObjectContext(aggregate);\n    advert.commit();\n\n    return null;\n  }\n}\n","import { AdvertsAggregate } from '../adverts.aggregate';\nimport { ICommandHandler, EventPublisher, CommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { AdvertRemoved } from '../events/advert-removed.event';\nimport { RemoveAdvertPayloadDto } from '../../../models/adverts/dtos/remove-advert.dto';\n\nexport class RemoveAdvert {\n  constructor(public data: RemoveAdvertPayloadDto) {}\n}\n\n@CommandHandler(RemoveAdvert)\nexport class RemoveAdvertHandler implements ICommandHandler<RemoveAdvert> {\n  @Inject() private readonly _publisher: EventPublisher;\n\n  async execute({ data }: RemoveAdvert) {\n    const aggregate = new AdvertsAggregate();\n    aggregate.apply(new AdvertRemoved(data));\n\n    const advert = this._publisher.mergeObjectContext(aggregate);\n    advert.commit();\n\n    return null;\n  }\n}\n","import { AdvertsAggregate } from '../adverts.aggregate';\nimport { ICommandHandler, EventPublisher, CommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { AdvertUpdated } from '../events/advert-updated.event';\nimport { UpdateAdvertPayloadDto } from '../../../models/adverts/dtos/update-advert.dto';\n\nexport class UpdateAdvert {\n  constructor(public data: UpdateAdvertPayloadDto) {}\n}\n\n@CommandHandler(UpdateAdvert)\nexport class UpdateAdvertHandler implements ICommandHandler<UpdateAdvert> {\n  @Inject() private readonly _publisher: EventPublisher;\n\n  async execute({ data }: UpdateAdvert) {\n    const aggregate = new AdvertsAggregate();\n    aggregate.apply(new AdvertUpdated(data));\n\n    const advert = this._publisher.mergeObjectContext(aggregate);\n    advert.commit();\n\n    return null;\n  }\n}\n","import { CreateAdvertPayload } from '../../../models/adverts/adverts.interface';\nexport class AdvertCreated {\n  constructor(public readonly id: string, public readonly data: CreateAdvertPayload) {}\n}","import { RemoveAdvertPayload } from '../../../models/adverts/adverts.interface';\n\nexport class AdvertRemoved {\n  constructor(public readonly advert: RemoveAdvertPayload) {}\n}","import { UpdateAdvertPayload } from '../../../models/adverts/adverts.interface';\n\nexport class AdvertUpdated {\n  constructor(public readonly advert: UpdateAdvertPayload) {}\n}","import { Module } from '@nestjs/common';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { AdvertCreated } from './adverts/events/advert-created.event';\nimport { PermissionCreated } from './permissions/events/permission-created.event';\nimport { UserProfilesModule } from './userProfiles/user-profiles.module';\nimport { AdvertsDomainModule } from './adverts/adverts.module';\nimport { PermissionsDomainModule } from './permissions/permissions.module';\nimport { AdvertUpdated } from './adverts/events/advert-updated.event';\nimport { PermissionUpdated } from './permissions/events/permission-updated.event';\nimport { SettingsDomainModule } from './settings/settings.module';\n\n@Module({\n  imports: [\n    CqrsModule,\n    AdvertsDomainModule,\n    PermissionsDomainModule,\n    UserProfilesModule,\n    SettingsDomainModule,\n  ],\n  controllers: [],\n  providers: [\n    AdvertCreated,\n    AdvertUpdated,\n    PermissionCreated,\n    PermissionUpdated,\n  ],\n})\nexport class DomainsModule {}\n","import { PermissionsAggregate } from '../permissions.aggregate';\nimport { Types } from 'mongoose';\nimport { ICommandHandler, EventPublisher, CommandHandler } from '@nestjs/cqrs';\nimport { CreatePermissionPayloadDto } from '../../../models/permissions/dtos/create-permission.dto';\nimport { Inject, BadRequestException } from '@nestjs/common';\nimport { PermissionCreated } from '../events/permission-created.event';\n\nexport class CreatePermission {\n  constructor(public data: CreatePermissionPayloadDto) {}\n}\n@CommandHandler(CreatePermission)\nexport class CreatePermissionHandler\n  implements ICommandHandler<CreatePermission> {\n  @Inject() private readonly _publisher: EventPublisher;\n\n  async execute({ data }: CreatePermission) {\n    if (!data.role) {\n      throw new BadRequestException('Role is required!');\n    }\n\n    const aggregate = new PermissionsAggregate();\n    const id = new Types.ObjectId().toHexString();\n    aggregate.apply(new PermissionCreated(id, data));\n    const permission = this._publisher.mergeObjectContext(aggregate);\n    permission.commit();\n\n    return null;\n  }\n}\n","import { PermissionsAggregate } from '../permissions.aggregate';\nimport { ICommandHandler, EventPublisher, CommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { PermissionRemoved } from '../events/permission-removed.event';\n\nexport class RemovePermission {\n  constructor(public id: string) {}\n}\n\n@CommandHandler(RemovePermission)\nexport class RemovePermissionHandler\n  implements ICommandHandler<RemovePermission> {\n  @Inject() private readonly _publisher: EventPublisher;\n\n  async execute({ id }: RemovePermission) {\n    const aggregate = new PermissionsAggregate();\n    aggregate.apply(new PermissionRemoved(id));\n\n    const permission = this._publisher.mergeObjectContext(aggregate);\n    permission.commit();\n\n    return null;\n  }\n}\n","import { PermissionsAggregate } from '../permissions.aggregate';\nimport { ICommandHandler, EventPublisher, CommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { PermissionUpdated } from '../events/permission-updated.event';\nimport { UpdatePermissionPayload } from '../../../models/permissions/permissions.interface';\n\nexport class UpdatePermission {\n  constructor(public id: string, public data: UpdatePermissionPayload) {}\n}\n\n@CommandHandler(UpdatePermission)\nexport class UpdatePermissionHandler\n  implements ICommandHandler<UpdatePermission> {\n  @Inject() private readonly _publisher: EventPublisher;\n\n  async execute({ id, data }: UpdatePermission) {\n    const aggregate = new PermissionsAggregate();\n    aggregate.apply(new PermissionUpdated(id, data));\n\n    const permission = this._publisher.mergeObjectContext(aggregate);\n    permission.commit();\n\n    return null;\n  }\n}\n","import { CreatePermissionPayload } from '../../../models/permissions/permissions.interface';\nexport class PermissionCreated {\n  constructor(\n    public readonly id: string,\n    public readonly data: CreatePermissionPayload\n  ) {}\n}\n","export class PermissionRemoved {\n  constructor(public readonly id: string) {}\n}\n","import { UpdatePermissionPayload } from '../../../models/permissions/permissions.interface';\n\nexport class PermissionUpdated {\n  constructor(\n    public readonly id,\n    public readonly data: UpdatePermissionPayload\n  ) {}\n}\n","import { AggregateRoot } from \"@nestjs/cqrs\";\nimport { Types } from \"mongoose\";\n\nexport class PermissionsAggregate extends AggregateRoot {\n  _id: Types.ObjectId;\n}\n","import { Module } from '@nestjs/common';\nimport { CqrsModule } from '@nestjs/cqrs';\n\n\nimport { PermissionsModelModule } from '../../models/permissions/permissions.module';\nimport { RemovePermissionHandler } from './commands/remove-permission.command';\nimport { CreatePermissionHandler } from './commands/create-permission.command';\nimport { UpdatePermissionHandler } from './commands/update-permission.command';\nimport { UsersModelModule } from '../../models/users/users.module';\n\nconst commandHandlers = [\n  CreatePermissionHandler,\n  RemovePermissionHandler,\n  UpdatePermissionHandler,\n];\n\n@Module({\n  imports: [CqrsModule, PermissionsModelModule, UsersModelModule],\n  providers: [...commandHandlers],\n})\nexport class PermissionsDomainModule {}\n","import { SettingsAggregate } from '../settings.aggregate';\nimport { Types } from 'mongoose';\nimport { ICommandHandler, EventPublisher, CommandHandler } from '@nestjs/cqrs';\nimport { CreateSettingPayloadDto } from '../../../models/settings/dtos/create-setting.dto';\nimport { Inject, BadRequestException } from '@nestjs/common';\nimport { SettingCreated } from '../events/setting-created.event';\n\nexport class CreateSetting {\n  constructor(public data: CreateSettingPayloadDto) {}\n}\n@CommandHandler(CreateSetting)\nexport class CreateSettingHandler implements ICommandHandler<CreateSetting> {\n  @Inject() private readonly _publisher: EventPublisher;\n\n  async execute({ data }: CreateSetting) {\n    if (!data.type) {\n      throw new BadRequestException('Type is required!');\n    }\n    if (!data.settings) {\n      throw new BadRequestException('Settings are required!');\n    }\n    if (!data.user) {\n      throw new BadRequestException('User is required!');\n    }\n    if (typeof data.enabled === undefined) {\n      throw new BadRequestException('Enabled is required!');\n    }\n\n    const aggregate = new SettingsAggregate();\n    const id = new Types.ObjectId().toHexString();\n    aggregate.apply(new SettingCreated(id, data));\n    const setting = this._publisher.mergeObjectContext(aggregate);\n    setting.commit();\n\n    return null;\n  }\n}\n","import { SettingsAggregate } from '../settings.aggregate';\nimport { ICommandHandler, EventPublisher, CommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { SettingRemoved } from '../events/setting-removed.event';\nimport { RemoveSettingPayloadDto } from '../../../models/settings/dtos/remove-setting.dto';\n\nexport class RemoveSetting {\n  constructor(public data: RemoveSettingPayloadDto) {}\n}\n\n@CommandHandler(RemoveSetting)\nexport class RemoveSettingHandler implements ICommandHandler<RemoveSetting> {\n  @Inject() private readonly _publisher: EventPublisher;\n\n  async execute({ data }: RemoveSetting) {\n    const aggregate = new SettingsAggregate();\n    aggregate.apply(new SettingRemoved(data));\n\n    const setting = this._publisher.mergeObjectContext(aggregate);\n    setting.commit();\n\n    return null;\n  }\n}\n","import { SettingsAggregate } from '../settings.aggregate';\nimport { ICommandHandler, EventPublisher, CommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { SettingUpdated } from '../events/setting-updated.event';\nimport { UpdateSettingPayloadDto } from '../../../models/settings/dtos/update-setting.dto';\n\nexport class UpdateSetting {\n  constructor(public data: UpdateSettingPayloadDto) {}\n}\n\n@CommandHandler(UpdateSetting)\nexport class UpdateSettingHandler implements ICommandHandler<UpdateSetting> {\n  @Inject() private readonly _publisher: EventPublisher;\n\n  async execute({ data }: UpdateSetting) {\n    const aggregate = new SettingsAggregate();\n    aggregate.apply(new SettingUpdated(data));\n\n    const setting = this._publisher.mergeObjectContext(aggregate);\n    setting.commit();\n\n    return null;\n  }\n}\n","import { CreateSettingPayload } from '../../../models/settings/settings.interface';\nexport class SettingCreated {\n  constructor(public readonly id: string, public readonly data: CreateSettingPayload) {}\n}","import { RemoveSettingPayload } from '../../../models/settings/settings.interface';\n\nexport class SettingRemoved {\n  constructor(public readonly setting: RemoveSettingPayload) {}\n}","import { UpdateSettingPayload } from '../../../models/settings/settings.interface';\n\nexport class SettingUpdated {\n  constructor(public readonly setting: UpdateSettingPayload) {}\n}","import { AggregateRoot } from '@nestjs/cqrs';\nimport { Types } from 'mongoose';\n\nexport class SettingsAggregate extends AggregateRoot {\n  _id: Types.ObjectId;\n}\n","import { Body, Controller, Post, HttpCode, HttpStatus, Param, UseGuards, UseInterceptors } from '@nestjs/common';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateSetting } from './commands/create-setting.command';\nimport { RemoveSetting } from './commands/remove-setting.command';\nimport { UpdateSetting } from './commands/update-setting.command';\nimport { UpdateSettingPayloadDto } from '../../models/settings/dtos/update-setting.dto';\nimport { CreateSettingPayloadDto } from '../../models/settings/dtos/create-setting.dto';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggingInterceptor } from '../../common/interceptors/logging.interceptor';\nimport { TransformInterceptor } from '../../common/interceptors/transform.interceptor';\nimport { PrivateRoutesPath } from '@ppm/common/main';\n\n@Controller(PrivateRoutesPath.SETTINGS)\n@ApiTags(PrivateRoutesPath.SETTINGS)\n@ApiBearerAuth('JWT')\n@UseGuards(AuthGuard('jwt'))\n@UseInterceptors(LoggingInterceptor, TransformInterceptor)\nexport class SettingsController {\n  constructor(private readonly commandBus: CommandBus) {}\n\n  @Post()\n  async create(@Body() dto: CreateSettingPayloadDto) {\n    return this.commandBus.execute(new CreateSetting(dto));\n  }\n\n  @Post(PrivateRoutesPath.POST_UPDATE)\n  @HttpCode(HttpStatus.OK)\n  async updates(@Param('id') id: string, @Body() updateSettingPayload: UpdateSettingPayloadDto): Promise<boolean> {\n    return this.commandBus.execute(new UpdateSetting({ id, ...updateSettingPayload }));\n  }\n\n  @Post(PrivateRoutesPath.POST_DELETE)\n  @HttpCode(HttpStatus.OK)\n  async remove(@Param('id') id: string) {\n    return this.commandBus.execute(new RemoveSetting({ id }));\n  }\n}\n","\nimport { Module } from '@nestjs/common';\nimport { CqrsModule } from '@nestjs/cqrs';\n\nimport { SettingsController } from './settings.controller';\n\nimport { SettingsModelModule } from '../../models/settings/settings.module';\nimport { RemoveSettingHandler } from './commands/remove-setting.command';\nimport { CreateSettingHandler } from './commands/create-setting.command';\nimport { UpdateSettingHandler } from './commands/update-setting.command';\n\nconst commandHandlers = [CreateSettingHandler, RemoveSettingHandler, UpdateSettingHandler];\n\n@Module({\n  imports: [CqrsModule, SettingsModelModule],\n  controllers: [SettingsController],\n  providers: [...commandHandlers],\n})\nexport class SettingsDomainModule {}","import { ICommandHandler, CommandHandler, EventPublisher } from '@nestjs/cqrs';\nimport { Inject, BadRequestException } from '@nestjs/common';\nimport { UserProfileAggregate } from '../user-profiles.aggregate';\nimport { UserProfileCreated } from '../events/user-profile-created.event';\nimport { Types } from 'mongoose';\nimport { CreateUserProfilePayloadDto } from '../../../models/userProfiles/dto/create-user-profile-payload.dto';\nimport { UsersService } from '../../../models/users/users.service';\n\nexport class CreateUserProfile {\n  constructor(\n    public userId: string,\n    public data: CreateUserProfilePayloadDto\n  ) {}\n}\n\n@CommandHandler(CreateUserProfile)\nexport class CreateUserProfileHandler\n  implements ICommandHandler<CreateUserProfile> {\n  @Inject() private readonly _publicher: EventPublisher;\n  @Inject() private readonly _usersService: UsersService;\n\n  async execute({ userId, data }: CreateUserProfile) {\n    const userFromDB = await this._usersService.getById(userId);\n\n    if (!userFromDB) {\n      throw new BadRequestException(`This user doesn't exist`);\n    }\n\n    const aggregate = new UserProfileAggregate();\n\n    aggregate.apply(\n      new UserProfileCreated(data, new Types.ObjectId().toHexString(), userId)\n    );\n\n    const userProfile = this._publicher.mergeObjectContext(aggregate);\n    userProfile.commit();\n\n    return null;\n  }\n}\n","import { ICommandHandler, CommandHandler, EventPublisher } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { UserProfileAggregate } from '../user-profiles.aggregate';\nimport { UserProfileDeleted } from '../events/user-profile-deleted.event';\n\nexport class DeleteUserProfileCommand {\n  constructor(public id: string) {}\n}\n@CommandHandler(DeleteUserProfileCommand)\nexport class DeleteUserProfileHandler\n  implements ICommandHandler<DeleteUserProfileCommand> {\n  @Inject() private readonly _publisher: EventPublisher;\n  async execute({ id }: DeleteUserProfileCommand) {\n    const aggregate = new UserProfileAggregate();\n    aggregate.apply(new UserProfileDeleted(id));\n\n    const userProfile = this._publisher.mergeObjectContext(aggregate);\n    userProfile.commit();\n    return null;\n  }\n}\n","import { ICommandHandler, CommandHandler, EventPublisher } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { UpdateUserProfilePayloadDto } from '../../../models/userProfiles/dto/update-user-profile-payload.dto';\nimport { UserProfileAggregate } from '../user-profiles.aggregate';\nimport { UserProfileUpdated } from '../events/user-profile-updated.event';\n\nexport class UpdateUserProfileCommand {\n  constructor(public id: string, public payload: UpdateUserProfilePayloadDto) {}\n}\n@CommandHandler(UpdateUserProfileCommand)\nexport class UpdateUserProfileHandler\n  implements ICommandHandler<UpdateUserProfileCommand> {\n  @Inject() private readonly _publisher: EventPublisher;\n  async execute({ id, payload }: UpdateUserProfileCommand) {\n    const aggregate = new UserProfileAggregate();\n    aggregate.apply(new UserProfileUpdated(id, payload));\n\n    const userProfile = this._publisher.mergeObjectContext(aggregate);\n    userProfile.commit();\n\n    return null;\n  }\n}\n","import { CreateUserProfile } from '../../../models/userProfiles/user-profile.interface';\n\nexport class UserProfileCreated {\n  constructor(\n    public readonly userProfile: CreateUserProfile,\n    public readonly id: string,\n    public readonly userId: string\n  ) {}\n}\n","export class UserProfileDeleted {\n  constructor(public readonly userProfile: string) {}\n}\n","import { UpdateUserProfile } from '../../../models/userProfiles/user-profile.interface';\n\nexport class UserProfileUpdated {\n  constructor(\n    public readonly id: string,\n    public readonly userProfile: UpdateUserProfile\n  ) {}\n}\n","import { AggregateRoot } from '@nestjs/cqrs';\n\nexport class UserProfileAggregate extends AggregateRoot {\n  id: string;\n}\n","import {\n  Controller,\n  Post,\n  Body,\n  Param,\n  UseGuards,\n  UseInterceptors,\n  Req,\n} from '@nestjs/common';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateUserProfile } from './commands/create-user-profile.command';\nimport { CreateUserProfilePayloadDto } from '../../models/userProfiles/dto/create-user-profile-payload.dto';\nimport { DeleteUserProfileCommand } from './commands/delete-user-profile.command';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggingInterceptor } from '../../common/interceptors/logging.interceptor';\nimport { TransformInterceptor } from '../../common/interceptors/transform.interceptor';\nimport { UpdateUserProfilePayloadDto } from '../../models/userProfiles/dto/update-user-profile-payload.dto';\nimport { UpdateUserProfileCommand } from './commands/update-user-profile.command';\nimport { Request } from 'express';\nimport { PrivateRoutesPath } from '@ppm/common/main';\n\n@Controller(PrivateRoutesPath.USER_PROFILES)\n@ApiBearerAuth('JWT')\n@UseGuards(AuthGuard('jwt'))\n@UseInterceptors(LoggingInterceptor, TransformInterceptor)\nexport class UserProfilesController {\n  constructor(private readonly _commandBus: CommandBus) {}\n\n  @Post()\n  async create(\n    @Body() payload: CreateUserProfilePayloadDto,\n    @Req() request: Request\n  ) {\n    const user: any = request.user;\n    return this._commandBus.execute(new CreateUserProfile(user._id, payload));\n  }\n\n  @Post(PrivateRoutesPath.POST_DELETE)\n  async delete(@Param('id') id: string) {\n    return this._commandBus.execute(new DeleteUserProfileCommand(id));\n  }\n\n  @Post(PrivateRoutesPath.POST_UPDATE)\n  async update(\n    @Param('id') id: string,\n    @Body() payload: UpdateUserProfilePayloadDto\n  ) {\n    return this._commandBus.execute(new UpdateUserProfileCommand(id, payload));\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { UsersModelModule } from '../../models/users/users.module';\nimport { UserProfilesController } from './user-profiles.controller';\nimport { CreateUserProfileHandler } from './commands/create-user-profile.command';\nimport { DeleteUserProfileHandler } from './commands/delete-user-profile.command';\nimport { UpdateUserProfileHandler } from './commands/update-user-profile.command';\n\nconst CommandHandlers = [\n  CreateUserProfileHandler,\n  DeleteUserProfileHandler,\n  UpdateUserProfileHandler,\n];\n\n@Module({\n  imports: [CqrsModule, UsersModelModule],\n  controllers: [UserProfilesController],\n  providers: [...CommandHandlers],\n})\nexport class UserProfilesModule {}\n","export enum ViewModels {\n  USERS_VIEW = 'Users',\n  PROJECTS_VIEW = 'Projects',\n  ADVERTS_VIEW = 'Adverts',\n  SETTINGS_VIEW = 'Settings',\n  EMAIL_VERIFICATION = 'EmailVerification',\n  FORGOTTEN_PASSWORD = 'ForgottenPassword',\n  CONSENT_REGISTRY = 'ConsentRegistration',\n  MENTORS = 'Mentors',\n  STUDENTS = 'Students',\n  PERMISSIONS_VIEW = 'Permissions',\n  USER_PROFILES = 'UserProfiles',\n}\n","import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AdvertsModelService } from './adverts.service';\nimport { AdvertsSchema } from './adverts.schema';\nimport { ViewModels } from '../../helpers/constants';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: ViewModels.ADVERTS_VIEW, schema: AdvertsSchema }])],\n  providers: [AdvertsModelService],\n  exports: [AdvertsModelService]\n})\nexport class AdvertsModelModule {}","import { Schema } from 'mongoose';\nimport { ViewModels } from '../../helpers/constants';\n\nexport const AdvertsSchema = new Schema({\n    title: {\n      type: String,\n      max: 100,\n      required: true\n    },\n    description: {\n      type: String\n    },\n    creator: {\n      _id: {type: String, ref: ViewModels.USERS_VIEW},\n      name: String\n    },\n  }, {timestamps: true}\n);\n","import { Injectable, Type } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Types } from 'mongoose';\n\nimport { ViewModels } from '../../helpers/constants';\nimport {\n  AdvertsViewModel,\n  CreateAdvertPayload,\n  RemoveAdvertPayload,\n  UpdateAdvertPayload,\n} from './adverts.interface';\n\n@Injectable()\nexport class AdvertsModelService {\n  @InjectModel(ViewModels.ADVERTS_VIEW) private _model!: Model<\n    AdvertsViewModel\n  >;\n\n  async getAll(): Promise<AdvertsViewModel[]> {\n    return this._model.find().exec();\n  }\n\n  async getById(id: string): Promise<AdvertsViewModel[]> {\n    return this._model.find({ _id: Types.ObjectId(id) }).exec();\n  }\n\n  async create(id: string, data: CreateAdvertPayload) {\n    await this._model.findOneAndUpdate({ _id: Types.ObjectId(id) }, data, {\n      upsert: true,\n      new: true,\n    });\n  }\n\n  async update(id: string, data: UpdateAdvertPayload) {\n    await this._model.findOneAndUpdate({ _id: Types.ObjectId(id) }, data, {\n      upsert: true,\n      new: true,\n    });\n  }\n\n  async remove({ id }: RemoveAdvertPayload) {\n    await this._model.deleteOne({ _id: Types.ObjectId(id) });\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAdvertPayloadDto{\n  @ApiProperty()\n  public readonly title: string;\n  @ApiProperty()\n  public readonly description?: string;\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { UpdateAdvertPayload } from '../adverts.interface';\n\nexport class UpdateAdvertPayloadDto implements UpdateAdvertPayload {\n  @ApiProperty()\n  public readonly id: string;\n  @ApiProperty()\n  public readonly title: string;\n  @ApiProperty()\n  public readonly description?: string;\n}\n","import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PermissionsModelService } from './permissions.service';\nimport { PermissionsSchema } from './permissions.schema';\nimport { ViewModels } from '../../helpers/constants';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: ViewModels.PERMISSIONS_VIEW, schema: PermissionsSchema },\n    ]),\n  ],\n  providers: [PermissionsModelService],\n  exports: [PermissionsModelService],\n})\nexport class PermissionsModelModule {}\n","import { Schema } from 'mongoose';\nimport { ViewModels } from '../../helpers/constants';\n\nexport const PermissionsSchema = new Schema(\n  {\n    user: {\n      _id: { type: String, ref: ViewModels.USERS_VIEW },\n      name: String,\n    },\n    role: {\n      type: String,\n      max: 100,\n      required: true,\n    },\n    adverts: [\n      { _id: { type: String, ref: ViewModels.ADVERTS_VIEW }, title: String },\n    ],\n  },\n  { timestamps: true }\n);\n","import { Injectable, Type } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Types } from 'mongoose';\n\nimport { ViewModels } from '../../helpers/constants';\nimport {\n  PermissionsViewModel,\n  CreatePermissionPayload,\n  UpdatePermissionPayload,\n} from './permissions.interface';\n\n@Injectable()\nexport class PermissionsModelService {\n  @InjectModel(ViewModels.PERMISSIONS_VIEW) public model!: Model<\n    PermissionsViewModel\n  >;\n\n  async getAll(): Promise<PermissionsViewModel[]> {\n    return this.model.find().exec();\n  }\n\n  async getById(id: string): Promise<PermissionsViewModel[]> {\n    return this.model.find({ _id: Types.ObjectId(id) }).exec();\n  }\n\n  async getByUserIdAndRole(\n    id: string,\n    role: string\n  ): Promise<PermissionsViewModel[]> {\n    return this.model\n      .find({ 'user._id': Types.ObjectId(id), role: role })\n      .exec();\n  }\n\n  async create(id: string, data: CreatePermissionPayload) {\n    await this.model.findOneAndUpdate({ _id: Types.ObjectId(id) }, data, {\n      upsert: true,\n      new: true,\n    });\n  }\n\n  async update(id: string, data: UpdatePermissionPayload) {\n    await this.model.findOneAndUpdate({ _id: Types.ObjectId(id) }, data, {\n      upsert: true,\n      new: true,\n    });\n  }\n\n  async remove(id: string) {\n    await this.model.deleteOne({ _id: Types.ObjectId(id) });\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { CreateSettingPayload } from '../settings.interface';\n\nexport class CreateSettingPayloadDto implements CreateSettingPayload {\n  @ApiProperty()\n  public readonly type: string;\n  @ApiProperty()\n  public readonly settings: any;\n  @ApiProperty()\n  public readonly user: { _id: string; userName: string };\n  @ApiProperty()\n  public readonly enabled: boolean;\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { UpdateSettingPayload } from '../settings.interface';\n\nexport class UpdateSettingPayloadDto implements UpdateSettingPayload {\n  @ApiProperty()\n  public readonly id: string;\n  @ApiProperty()\n  public readonly type: string;\n  @ApiProperty()\n  public readonly settings: any;\n  @ApiProperty()\n  public readonly user: { _id: string; userName: string };\n  @ApiProperty()\n  public readonly enabled: boolean;\n}\n","import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { SettingsModelService } from './settings.service';\nimport { SettingsSchema } from './settings.schema';\nimport { ViewModels } from '../../helpers/constants';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: ViewModels.SETTINGS_VIEW, schema: SettingsSchema }])],\n  providers: [SettingsModelService],\n  exports: [SettingsModelService]\n})\nexport class SettingsModelModule {}","import { Schema } from 'mongoose';\nexport const SettingsSchema = new Schema({\n    type: {\n      type: String,\n      max: 100,\n    },\n    settings: {\n      type: Schema.Types.Mixed\n    },\n    user: {\n      type: Schema.Types.Mixed\n    },\n    enabled: {\n      type: Boolean\n    }\n  },\n);\n","import { Injectable, Type } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Types } from 'mongoose';\n\nimport { ViewModels } from '../../helpers/constants';\nimport {\n  SettingsViewModel,\n  CreateSettingPayload,\n  RemoveSettingPayload,\n  UpdateSettingPayload,\n} from './settings.interface';\n\n@Injectable()\nexport class SettingsModelService {\n  @InjectModel(ViewModels.SETTINGS_VIEW) private _model!: Model<\n    SettingsViewModel\n  >;\n\n  async getAll(): Promise<SettingsViewModel[]> {\n    return this._model.find().exec();\n  }\n\n  async getById(id: string): Promise<SettingsViewModel[]> {\n    return this._model.find({ _id: Types.ObjectId(id) }).exec();\n  }\n\n  async create(id: string, data: CreateSettingPayload) {\n    await this._model.findOneAndUpdate({ _id: Types.ObjectId(id) }, data, {\n      upsert: true,\n      new: true,\n    });\n  }\n\n  async update(id: string, data: UpdateSettingPayload) {\n    await this._model.findOneAndUpdate({ _id: Types.ObjectId(id) }, data, {\n      upsert: true,\n      new: true,\n    });\n  }\n\n  async remove({ id }: RemoveSettingPayload) {\n    await this._model.deleteOne({ _id: Types.ObjectId(id) });\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { CreateUserProfile } from '../user-profile.interface';\n\nexport class CreateUserProfilePayloadDto implements CreateUserProfile {\n  @ApiProperty()\n  public readonly firstName: string;\n  @ApiProperty()\n  public readonly lastName: string;\n  @ApiProperty()\n  public readonly photo: string;\n  @ApiProperty()\n  public readonly fieldOfProfession: string;\n  @ApiProperty({ isArray: true, type: 'string' })\n  public readonly categories: string[];\n  @ApiProperty()\n  public readonly city: string;\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { UpdateUserProfile } from '../user-profile.interface';\n\nexport class UpdateUserProfilePayloadDto implements UpdateUserProfile {\n  @ApiProperty()\n  public readonly type: string;\n  @ApiProperty()\n  public readonly description: string;\n  @ApiProperty()\n  public readonly firstName: string;\n  @ApiProperty()\n  public readonly lastName: string;\n  @ApiProperty()\n  public readonly photo: string;\n  @ApiProperty()\n  public readonly fieldOfProfession: string;\n  @ApiProperty()\n  public readonly company: string;\n  @ApiProperty()\n  public readonly categories: string[];\n  @ApiProperty()\n  public readonly city: string;\n  @ApiProperty()\n  public readonly phone: string;\n  @ApiProperty()\n  public readonly email: string;\n}\n","import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ViewModels } from '../../helpers/constants';\nimport { UserProfileSchema } from './user-profile.schema';\nimport { UserProfileModelService } from './user-profile.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: ViewModels.USER_PROFILES, schema: UserProfileSchema },\n    ]),\n  ],\n  providers: [UserProfileModelService],\n  exports: [UserProfileModelService],\n})\nexport class UserProfileModelModule {}\n","import { Schema } from 'mongoose';\n\nexport const UserProfileSchema = new Schema({\n  type: String,\n  description: String,\n  firstName: String,\n  lastName: String,\n  photo: String,\n  fieldOfProfession: String,\n  company: String,\n  categories: [String],\n  city: String,\n  phone: String,\n  email: String,\n});\n","import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { ViewModels } from '../../helpers/constants';\nimport { UserProfileViewModel } from './user-profile.interface';\nimport { UserProfileCreated } from '../../domains/userProfiles/events/user-profile-created.event';\nimport { UserProfileUpdated } from '../../domains/userProfiles/events/user-profile-updated.event';\nimport { UserProfilePayloadDto } from './dto/user-profile-payload.dto';\nimport { CreateUserProfilePayloadDto } from './dto/create-user-profile-payload.dto';\n\n@Injectable()\nexport class UserProfileModelService {\n  @InjectModel(ViewModels.USER_PROFILES) public model!: Model<\n    UserProfileViewModel\n  >;\n\n  public async create(data: UserProfileCreated): Promise<void> {\n    await this.model.findOneAndUpdate(\n      { _id: Types.ObjectId(data.id) },\n      data.userProfile,\n      { upsert: true }\n    );\n  }\n  async delete(id: string) {\n    await this.model.deleteOne({ _id: Types.ObjectId(id) });\n  }\n  async update(data: UserProfileUpdated) {\n    await this.model.findOneAndUpdate(\n      { _id: Types.ObjectId(data.id) },\n      { $set: data.userProfile }\n    );\n  }\n  async getAll(): Promise<UserProfilePayloadDto[]> {\n    return this.model.find().exec();\n  }\n  async getById(id: string): Promise<CreateUserProfilePayloadDto> {\n    return this.model.findById({ _id: Types.ObjectId(id) });\n  }\n  async getByEmail(email: string) {\n    return this.model.find({ email: email }).exec();\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  public readonly firstName?: string;\n  @ApiProperty()\n  public readonly lastName?: string;\n  @ApiProperty()\n  public readonly email: string;\n  @ApiProperty()\n  public readonly phone?: string;\n  @ApiProperty()\n  public readonly birthDayDate?: Date;\n  @ApiProperty()\n  public password: string;\n}","export class SettingsDto {\n  constructor(object: any) {\n    object = object || {};\n    this.email = object.email;\n  };\n  readonly email: string;\n}","import { SettingsDto } from \"./settings.dto\";\n\nexport class UserDto {\n  constructor(object: any) {\n    this.name = object.name;\n    this.surname = object.surname;\n    this.email = object.email;\n    this.phone = object.phone;\n    this.birthDayDate = object.birthDayDate;\n    this.settings = new SettingsDto(object.settings);\n  };\n  readonly name: string;\n  readonly surname: string;\n  readonly email: string;\n  readonly phone: string;\n  readonly birthDayDate: Date;\n  settings: SettingsDto\n}","import { Document } from 'mongoose';\n\nexport enum UserStatus {\n  Active = 'Active',\n  Closed = 'Closed'\n}\n\nexport enum UserRoles {\n  User = 'user',\n  Manager = 'manager',\n  Admin = 'admin',\n  SuperAdmin = 'superAdmin',\n}\n\nexport interface User extends Document{\n  userName: string;\n  user_name: string;\n  firstName: string;\n  lastName: string;\n  position: string;\n  companyCode: string;\n  registrationDate: Date;\n  email: string;\n  phone: string;\n  password: string;\n  birthDayDate: Date;\n  role: string;\n  roles: UserRoles[];\n  auth: {\n    email : {\n      valid : boolean,\n    },\n    facebook: {\n      userid: string\n    },\n    gmail: {\n      userid: string\n    }\n  },\n  settings: {\n  },\n}","import * as mongoose from 'mongoose';\n\n\nexport const UserSchema = new mongoose.Schema({\n  userName: {\n    type: String,\n    max: 100,\n  },\n  firstName: {\n    type: String\n  },\n  lastName: {\n    type: String\n  },\n  position: {\n    type: String\n  },\n  companyCode: {\n    type: String\n  },\n  registrationDate: {type: Date, default: Date.now},\n  email: {\n    type: String,\n    unique: true\n  },\n  phone: {\n    type: String\n  },\n  password: {\n    type: String\n  },\n  status: String,\n  birthDayDate: Date,\n  role: String,\n  roles: [String],\n  auth: {\n    email : {\n      valid : { type: Boolean, default: false }\n    },\n    facebook: {\n      userid: String\n    },\n    gmail: {\n      userid: String\n    }\n  },\n  settings: {\n  }\n});","import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersService } from './users.service';\nimport { UserSchema } from './user.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: 'User', schema: UserSchema }])],\n  providers: [UsersService],\n  exports: [UsersService]\n})\nexport class UsersModelModule{}","import { Model, Types } from 'mongoose';\nimport * as bcrypt from 'bcryptjs';\nimport { Injectable, HttpStatus, HttpException } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User, UserRoles } from './user.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport * as _ from 'lodash'\nimport { SettingsDto } from './dto/settings.dto';\n\nconst saltRounds = 10;\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel('User') private readonly model: Model<User>) {}\n\n  \n  async findAll(): Promise<User[]> {\n    return await this.model.find().exec();\n  }\n\n  async getById(id: string): Promise<User> {\n     return this.model.findOne({_id: Types.ObjectId(id)}).exec();\n  }\n\n  async findByEmail(email: string): Promise<User> {\n    return await this.model.findOne({email: email}).exec();\n  }\n\n  async createNewUser(newUser: CreateUserDto): Promise<User> {     \n    \n    if(this.isValidEmail(newUser.email) && newUser.password){\n      const userRegistered = await this.findByEmail(newUser.email);\n      \n      if(!userRegistered){\n        newUser.password = await bcrypt.hash(newUser.password, saltRounds);\n        const createdUser = new this.model(newUser);\n        createdUser.roles = [UserRoles.User];\n        createdUser.userName = `${createdUser.firstName} ${createdUser.lastName}`;\n        return createdUser.save();\n      } else if (!userRegistered.auth.email.valid) {\n        return userRegistered;\n      } else {\n        throw new HttpException('REGISTRATION.USER_ALREADY_REGISTERED', HttpStatus.FORBIDDEN);\n      }\n    } else {\n      throw new HttpException('REGISTRATION.MISSING_MANDATORY_PARAMETERS', HttpStatus.FORBIDDEN);\n    } \n    \n  }\n\n  isValidEmail (email : string){\n    if(email){\n      const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    } else return false\n  }\n\n  async setPassword(email: string, newPassword: string): Promise<boolean> { \n    const userFromDb = await this.model.findOne({ email: email});\n    if(!userFromDb) throw new HttpException('LOGIN.USER_NOT_FOUND', HttpStatus.NOT_FOUND);\n    \n    userFromDb.password = await bcrypt.hash(newPassword, saltRounds);\n\n    await userFromDb.save();\n    return true;\n  }\n\n  guid(){\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  async updateSettings(settingsDto: SettingsDto): Promise<User> {\n    const userFromDb = await this.model.findOne({ email: settingsDto.email});\n    if(!userFromDb) throw new HttpException('COMMON.USER_NOT_FOUND', HttpStatus.NOT_FOUND);\n    \n    userFromDb.settings = userFromDb.settings || {};\n    for (const key in settingsDto) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (settingsDto.hasOwnProperty(key) && key != \"email\") {\n        userFromDb.settings[key] = settingsDto[key];\n      }\n    }\n    \n    await userFromDb.save();\n    return userFromDb;\n  }\n\n}","import { Injectable, Inject } from '@nestjs/common';\nimport { ICommand, ofType, Saga } from '@nestjs/cqrs';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { AdvertCreated } from '../domains/adverts/events/advert-created.event';\nimport { UsersService } from '../models/users/users.service';\nimport { PermissionsModelService } from '../models/permissions/permissions.service';\nimport { UpdatePermission } from '../domains/permissions/commands/update-permission.command';\nimport { Roles } from '@ppm/common/main';\n\n@Injectable()\nexport class AdvertsSagas {\n  @Inject() private readonly _userService: UsersService;\n  @Inject() private readonly _permissionsService: PermissionsModelService;\n\n  @Saga()\n  updatePermission = (\n    events$: Observable<AdvertCreated>\n  ): Observable<ICommand> => {\n    return events$.pipe(\n      ofType(AdvertCreated),\n      switchMap(async (event) => {\n        const user = await this._userService.getById(\n          event.data.creator._id.toHexString()\n        );\n\n        const permissions = await this._permissionsService.getByUserIdAndRole(\n          user._id.toHexString(),\n          Roles.MENTOR\n        );\n\n        if (permissions.length) {\n          let permission = permissions[0];\n          if (!permission.adverts) {\n            permission.adverts = [];\n          }\n          permission.adverts.push({ _id: event.id, title: event.data.title });\n          return new UpdatePermission(permission._id.toHexString(), permission);\n        }\n        return null;\n      })\n    );\n  };\n}\n","import { Module } from '@nestjs/common';\nimport { AdvertsSagas } from './adverts.sagas';\nimport { UserProfilesSagas } from './user-profiles.sagas';\nimport { UsersModelModule } from '../models/users/users.module';\nimport { UserProfileModelModule } from '../models/userProfiles/user-profile.module';\nimport { PermissionsModelModule } from '../models/permissions/permissions.module';\n\n@Module({\n  imports: [UsersModelModule, PermissionsModelModule, UserProfileModelModule],\n  providers: [AdvertsSagas, UserProfilesSagas],\n  exports: [],\n})\nexport class SagasModule {}\n","import { Injectable, Inject } from '@nestjs/common';\nimport { ICommand, ofType, Saga, CommandBus } from '@nestjs/cqrs';\nimport { Observable } from 'rxjs';\nimport { switchMap, concatAll } from 'rxjs/operators';\nimport { UsersService } from '../models/users/users.service';\nimport { UserProfileCreated } from '../domains/userProfiles/events/user-profile-created.event';\nimport { CreatePermission } from '../domains/permissions/commands/create-permission.command';\n\n@Injectable()\nexport class UserProfilesSagas {\n  @Inject() private readonly _userService: UsersService;\n\n  @Saga()\n  createUserProfile = (\n    events$: Observable<UserProfileCreated>\n  ): Observable<ICommand> => {\n    return events$.pipe(\n      ofType(UserProfileCreated),\n      switchMap(async (event) => {\n        const user = await this._userService.getById(event.userId);\n\n        return Promise.all(\n          user.roles.map(async (role) => {\n            if (role) {\n              const cmd = new CreatePermission({\n                role,\n                user: { _id: user._id, name: user.userName },\n              });\n              return cmd;\n            }\n            return null;\n          })\n        );\n      }),\n      concatAll()\n    );\n  };\n}\n","import {  Controller, Get, Param, UseGuards, UseInterceptors } from '@nestjs/common';\nimport {  QueryBus } from '@nestjs/cqrs';\nimport { GetAdvertsQuery } from './queries/handlers/get-adverts.handler';\nimport { GetAdvertQuery } from './queries/handlers/get-advert.handler';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { TransformInterceptor } from '../../common/interceptors/transform.interceptor';\nimport { LoggingInterceptor } from '../../common/interceptors/logging.interceptor';\nimport { PrivateRoutesPath } from '@ppm/common/main';\n\n@Controller(PrivateRoutesPath.ADVERTS)\n@ApiTags(PrivateRoutesPath.ADVERTS)\n@ApiBearerAuth('JWT')\n@UseGuards(AuthGuard('jwt'))\n@UseInterceptors(LoggingInterceptor, TransformInterceptor)\nexport class AdvertsController {\n  constructor(\n    private readonly queryBus: QueryBus,\n  ) {}\n\n  @Get()\n  async findAll(): Promise<any[]> {\n    return this.queryBus.execute(new GetAdvertsQuery());\n  }\n\n  @Get(PrivateRoutesPath.GET_BY_ID)\n  async getById(@Param('id') id: string): Promise<any[]> {\n    return this.queryBus.execute(new GetAdvertQuery({ id }));\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { EventHandlers } from './handlers';\nimport { AdvertsController } from './adverts.controller';\nimport { QueryHandlers } from './queries/handlers';\nimport { AdvertsModelModule } from '../../models/adverts/adverts.module';\n\n@Module({\n  imports: [CqrsModule, AdvertsModelModule],\n  controllers: [AdvertsController],\n  providers: [\n    ...EventHandlers,\n    ...QueryHandlers,\n  ],\n})\nexport class AdvertsViewModule {}\n","import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { AdvertCreated } from '../../../domains/adverts/events/advert-created.event';\nimport { AdvertsModelService } from '../../../models/adverts/adverts.service';\nimport { Inject } from '@nestjs/common';\n\n@EventsHandler(AdvertCreated)\nexport class AdvertCreatedHandler implements IEventHandler<AdvertCreated> {\n  @Inject() private readonly _advertsViewService: AdvertsModelService;\n\n  public async handle({ id, data}: AdvertCreated) {\n    this._advertsViewService.create(id, data);\n    return null;\n  }\n}","import { AdvertCreatedHandler } from './created-advert.handler';\nimport { AdvertRemovedHandler } from './removed-advert.handler';\nimport { AdvertUpdatedHandler } from './updated-advert.handler'\n\nexport const EventHandlers = [ AdvertCreatedHandler, AdvertRemovedHandler, AdvertUpdatedHandler];\n","import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { AdvertRemoved } from '../../../domains/adverts/events/advert-removed.event';\nimport { AdvertsModelService } from '../../../models/adverts/adverts.service';\nimport { Inject } from '@nestjs/common';\n\n@EventsHandler(AdvertRemoved)\nexport class AdvertRemovedHandler implements IEventHandler<AdvertRemoved> {\n  @Inject() private readonly _advertsViewService: AdvertsModelService;\n\n  public async handle(event: AdvertRemoved) {\n    return this._advertsViewService.remove(event.advert);\n  }\n}","import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { AdvertUpdated } from '../../../domains/adverts/events/advert-updated.event';\nimport { AdvertsModelService } from '../../../models/adverts/adverts.service';\nimport { Inject } from '@nestjs/common';\n\n@EventsHandler(AdvertUpdated)\nexport class AdvertUpdatedHandler implements IEventHandler<AdvertUpdated> {\n  @Inject() private readonly _advertsViewService: AdvertsModelService;\n\n  public async handle(event: AdvertUpdated) {\n    this._advertsViewService.update(event.advert.id, event.advert);\n    return null;\n  }\n}","import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { AdvertsModelService } from '../../../../models/adverts/adverts.service';\nimport { Inject } from '@nestjs/common';\nimport { AdvertsViewModel } from '../../../../models/adverts/adverts.interface';\nimport { GetAdvertPayloadDto } from '../../../../models/adverts/dtos/get-advert.dto';\n\nexport class GetAdvertQuery {\n  constructor(public data: GetAdvertPayloadDto) {}\n}\n\n@QueryHandler(GetAdvertQuery)\nexport class GetAdvertHandler implements IQueryHandler<GetAdvertQuery> {\n  @Inject() private readonly _advertsViewService: AdvertsModelService;\n\n  async execute({data}): Promise<AdvertsViewModel[]> {\n    return this._advertsViewService.getById(data.id);\n  }\n}\n","import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { AdvertsModelService } from '../../../../models/adverts/adverts.service';\nimport { Inject } from '@nestjs/common';\nimport { AdvertsViewModel } from '../../../../models/adverts/adverts.interface';\n\nexport class GetAdvertsQuery {}\n\n@QueryHandler(GetAdvertsQuery)\nexport class GetAdvertsHandler implements IQueryHandler<GetAdvertsQuery> {\n  @Inject() private readonly _advertsViewService: AdvertsModelService;\n\n  async execute(): Promise<AdvertsViewModel[]> {\n    return this._advertsViewService.getAll();\n  }\n}\n","import { GetAdvertsHandler } from './get-adverts.handler';\nimport { GetAdvertHandler } from './get-advert.handler';\n\nexport const QueryHandlers = [GetAdvertsHandler, GetAdvertHandler];\n","import { EventsHandler, IEventHandler } from \"@nestjs/cqrs\";\nimport { PermissionCreated } from \"../../../domains/permissions/events/permission-created.event\";\nimport { PermissionsModelService } from \"../../../models/permissions/permissions.service\";\nimport { Inject } from \"@nestjs/common\";\n\n@EventsHandler(PermissionCreated)\nexport class PermissionCreatedHandler\n  implements IEventHandler<PermissionCreated> {\n  @Inject() private readonly _permissionsViewService: PermissionsModelService;\n\n  public async handle({ id, data }: PermissionCreated) {\n    this._permissionsViewService.create(id, data);\n    return null;\n  }\n}\n","import { PermissionCreatedHandler } from \"./created-permission.handler\";\nimport { PermissionRemovedHandler } from \"./removed-permission.handler\";\nimport { PermissionUpdatedHandler } from \"./updated-permission.handler\";\n\nexport const EventHandlers = [\n  PermissionCreatedHandler,\n  PermissionRemovedHandler,\n  PermissionUpdatedHandler,\n];\n","import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PermissionRemoved } from '../../../domains/permissions/events/permission-removed.event';\nimport { PermissionsModelService } from '../../../models/permissions/permissions.service';\nimport { Inject } from '@nestjs/common';\n\n@EventsHandler(PermissionRemoved)\nexport class PermissionRemovedHandler\n  implements IEventHandler<PermissionRemoved> {\n  @Inject() private readonly _permissionsViewService: PermissionsModelService;\n\n  public async handle({ id }: PermissionRemoved) {\n    return this._permissionsViewService.remove(id);\n  }\n}\n","import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { PermissionUpdated } from '../../../domains/permissions/events/permission-updated.event';\nimport { PermissionsModelService } from '../../../models/permissions/permissions.service';\nimport { Inject } from '@nestjs/common';\n\n@EventsHandler(PermissionUpdated)\nexport class PermissionUpdatedHandler\n  implements IEventHandler<PermissionUpdated> {\n  @Inject() private readonly _permissionsViewService: PermissionsModelService;\n\n  public async handle({ id, data }: PermissionUpdated) {\n    this._permissionsViewService.update(id, data);\n    return null;\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { EventHandlers } from './handlers';\nimport { PermissionsModelModule } from '../../models/permissions/permissions.module';\n\n@Module({\n  imports: [CqrsModule, PermissionsModelModule],\n  providers: [...EventHandlers],\n})\nexport class PermissionsViewModule {}\n","import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SettingCreated } from '../../../domains/settings/events/setting-created.event';\nimport { SettingsModelService } from '../../../models/settings/settings.service';\nimport { Inject } from '@nestjs/common';\n\n@EventsHandler(SettingCreated)\nexport class SettingCreatedHandler implements IEventHandler<SettingCreated> {\n  @Inject() private readonly _settingsViewService: SettingsModelService;\n\n  public async handle({ id, data}: SettingCreated) {\n    this._settingsViewService.create(id, data);\n    return null;\n  }\n}","import { SettingCreatedHandler } from './created-setting.handler';\nimport { SettingRemovedHandler } from './removed-setting.handler';\nimport { SettingUpdatedHandler } from './updated-setting.handler'\n\nexport const EventHandlers = [ SettingCreatedHandler, SettingRemovedHandler, SettingUpdatedHandler];\n","import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SettingRemoved } from '../../../domains/settings/events/setting-removed.event';\nimport { SettingsModelService } from '../../../models/settings/settings.service';\nimport { Inject } from '@nestjs/common';\n\n@EventsHandler(SettingRemoved)\nexport class SettingRemovedHandler implements IEventHandler<SettingRemoved> {\n  @Inject() private readonly _settingsViewService: SettingsModelService;\n\n  public async handle(event: SettingRemoved) {\n    return this._settingsViewService.remove(event.setting);\n  }\n}","import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SettingUpdated } from '../../../domains/settings/events/setting-updated.event';\nimport { SettingsModelService } from '../../../models/settings/settings.service';\nimport { Inject } from '@nestjs/common';\n\n@EventsHandler(SettingUpdated)\nexport class SettingUpdatedHandler implements IEventHandler<SettingUpdated> {\n  @Inject() private readonly _settingsViewService: SettingsModelService;\n\n  public async handle(event: SettingUpdated) {\n    this._settingsViewService.update(event.setting.id, event.setting);\n    return null;\n  }\n}","import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { SettingsModelService } from '../../../../models/settings/settings.service';\nimport { Inject } from '@nestjs/common';\nimport { SettingsViewModel } from '../../../../models/settings/settings.interface';\nimport { GetSettingPayloadDto } from '../../../../models/settings/dtos/get-setting.dto';\n\nexport class GetSettingQuery {\n  constructor(public data: GetSettingPayloadDto) {}\n}\n\n@QueryHandler(GetSettingQuery)\nexport class GetSettingHandler implements IQueryHandler<GetSettingQuery> {\n  @Inject() private readonly _settingsViewService: SettingsModelService;\n\n  async execute({data}): Promise<SettingsViewModel[]> {\n    return this._settingsViewService.getById(data.id);\n  }\n}\n","import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { SettingsModelService } from '../../../../models/settings/settings.service';\nimport { Inject } from '@nestjs/common';\nimport { SettingsViewModel } from '../../../../models/settings/settings.interface';\n\nexport class GetSettingsQuery {}\n\n@QueryHandler(GetSettingsQuery)\nexport class GetSettingsHandler implements IQueryHandler<GetSettingsQuery> {\n  @Inject() private readonly _settingsViewService: SettingsModelService;\n\n  async execute(): Promise<SettingsViewModel[]> {\n    return this._settingsViewService.getAll();\n  }\n}\n","import { GetSettingsHandler } from './get-settings.handler';\nimport { GetSettingHandler } from './get-setting.handler';\n\nexport const QueryHandlers = [GetSettingsHandler, GetSettingHandler];\n","import {  Controller, Get, Param, UseGuards, UseInterceptors } from '@nestjs/common';\nimport {  QueryBus } from '@nestjs/cqrs';\nimport { GetSettingsQuery } from './queries/handlers/get-settings.handler';\nimport { GetSettingQuery } from './queries/handlers/get-setting.handler';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggingInterceptor } from '../../common/interceptors/logging.interceptor';\nimport { TransformInterceptor } from '../../common/interceptors/transform.interceptor';\nimport { PrivateRoutesPath } from '@ppm/common/main';\n\n@Controller(PrivateRoutesPath.SETTINGS)\n@ApiTags(PrivateRoutesPath.SETTINGS)\n@ApiBearerAuth('JWT')\n@UseGuards(AuthGuard('jwt'))\n@UseInterceptors(LoggingInterceptor, TransformInterceptor)\nexport class SettingsController {\n  constructor(\n    private readonly queryBus: QueryBus,\n  ) {}\n\n  @Get()\n  async findAll(): Promise<any[]> {\n    return this.queryBus.execute(new GetSettingsQuery());\n  }\n\n  @Get(PrivateRoutesPath.GET_BY_ID)\n  async getById(@Param('id') id: string): Promise<any[]> {\n    return this.queryBus.execute(new GetSettingQuery({ id }));\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { EventHandlers } from './handlers';\nimport { SettingsController } from './settings.controller';\nimport { QueryHandlers } from './queries/handlers';\nimport { SettingsModelModule } from '../../models/settings/settings.module';\n\n@Module({\n  imports: [CqrsModule, SettingsModelModule],\n  controllers: [SettingsController],\n  providers: [\n    ...EventHandlers,\n    ...QueryHandlers,\n  ],\n})\nexport class SettingsViewModule {}\n","import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { UserProfileCreated } from '../../../domains/userProfiles/events/user-profile-created.event';\nimport { UserProfileModelService } from '../../../models/userProfiles/user-profile.service';\n\n@EventsHandler(UserProfileCreated)\nexport class UserProfileCreatedHandler\n  implements IEventHandler<UserProfileCreated> {\n  @Inject() private readonly _userProfileModelService: UserProfileModelService;\n  public async handle(event: UserProfileCreated) {\n    await this._userProfileModelService.create(event);\n    return null;\n  }\n}\n","import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { UserProfileModelService } from '../../../models/userProfiles/user-profile.service';\nimport { UserProfileDeleted } from '../../../domains/userProfiles/events/user-profile-deleted.event';\n\n@EventsHandler(UserProfileDeleted)\nexport class UserProfileDeletedHandler\n  implements IEventHandler<UserProfileDeleted> {\n  @Inject() private readonly _userProfileModelService: UserProfileModelService;\n  public async handle(event: UserProfileDeleted) {\n    await this._userProfileModelService.delete(event.userProfile);\n    return null;\n  }\n}\n","import { UserProfileCreatedHandler } from './created-user-profile.handler';\nimport { UserProfileDeletedHandler } from './deleted-user-profile.handler';\nimport { UserProfileUpdatedHandler } from './updated-user-profile.handler';\n\nexport const EventHandlers = [\n  UserProfileCreatedHandler,\n  UserProfileDeletedHandler,\n  UserProfileUpdatedHandler,\n];\n","import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { UserProfileModelService } from '../../../models/userProfiles/user-profile.service';\nimport { UserProfileUpdated } from '../../../domains/userProfiles/events/user-profile-updated.event';\n\n@EventsHandler(UserProfileUpdated)\nexport class UserProfileUpdatedHandler\n  implements IEventHandler<UserProfileUpdated> {\n  @Inject() private readonly _userProfileModelService: UserProfileModelService;\n  public async handle(event: UserProfileUpdated) {\n    await this._userProfileModelService.update(event);\n    return null;\n  }\n}\n","import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { UserProfileModelService } from '../../../models/userProfiles/user-profile.service';\n\nexport class GetUserProfileByEmailQuery {\n  constructor(public email: string) {}\n}\n\n@QueryHandler(GetUserProfileByEmailQuery)\nexport class GetUserProfileByEmailHandler\n  implements IQueryHandler<GetUserProfileByEmailQuery> {\n  @Inject() private readonly _userProfileModelService: UserProfileModelService;\n  async execute({ email }) {\n    return this._userProfileModelService.getByEmail(email);\n  }\n}\n","import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { UserProfileModelService } from '../../../models/userProfiles/user-profile.service';\nimport { CreateUserProfilePayloadDto } from '../../../models/userProfiles/dto/create-user-profile-payload.dto';\n\nexport class GetUserProfileByIdQuery {\n  constructor(public id: string) {}\n}\n\n@QueryHandler(GetUserProfileByIdQuery)\nexport class GetUserProfileByIdHandler\n  implements IQueryHandler<GetUserProfileByIdQuery> {\n  @Inject() private readonly _userProfileModelService: UserProfileModelService;\n  async execute({ id }): Promise<CreateUserProfilePayloadDto> {\n    return this._userProfileModelService.getById(id);\n  }\n}\n","import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { UserProfileModelService } from '../../../models/userProfiles/user-profile.service';\n\nexport class GetUserProfilesQuery {}\n\n@QueryHandler(GetUserProfilesQuery)\nexport class GetUserProfilesHandler\n  implements IQueryHandler<GetUserProfilesQuery> {\n  @Inject() private readonly _userProfileModelService: UserProfileModelService;\n  async execute() {\n    return this._userProfileModelService.getAll();\n  }\n}\n","import { GetUserProfilesHandler } from './get-user-profiles.handlers';\nimport { GetUserProfileByIdHandler } from './get-user-profile-by-id.handler';\nimport { GetUserProfileByEmailHandler } from './get-user-profile-by-email.handler';\n\nexport const QueryHandlers = [\n  GetUserProfilesHandler,\n  GetUserProfileByIdHandler,\n  GetUserProfileByEmailHandler,\n];\n","import {\n  Controller,\n  Get,\n  UseGuards,\n  UseInterceptors,\n  Param,\n} from '@nestjs/common';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggingInterceptor } from '../../common/interceptors/logging.interceptor';\nimport { TransformInterceptor } from '../../common/interceptors/transform.interceptor';\nimport { QueryBus } from '@nestjs/cqrs';\nimport { GetUserProfileByIdQuery } from './queries/get-user-profile-by-id.handler';\nimport { GetUserProfileByEmailQuery } from './queries/get-user-profile-by-email.handler';\nimport { UserProfilePayloadDto } from '../../models/userProfiles/dto/user-profile-payload.dto';\nimport { GetUserProfilesQuery } from './queries/get-user-profiles.handlers';\nimport { PrivateRoutesPath } from '@ppm/common/main';\n\n@Controller(PrivateRoutesPath.USER_PROFILES)\n@ApiBearerAuth('JWT')\n@UseGuards(AuthGuard('jwt'))\n@UseInterceptors(LoggingInterceptor, TransformInterceptor)\nexport class UserProfilesController {\n  constructor(private readonly _queryBus: QueryBus) {}\n\n  @Get()\n  async findAll(): Promise<UserProfilePayloadDto[]> {\n    return this._queryBus.execute(new GetUserProfilesQuery());\n  }\n  @Get(PrivateRoutesPath.GET_BY_ID)\n  async getById(@Param('id') id: string): Promise<UserProfilePayloadDto> {\n    return this._queryBus.execute(new GetUserProfileByIdQuery(id));\n  }\n\n  @Get('/:email/find-by-email')\n  async getByEmail(@Param('email') email: string) {\n    return this._queryBus.execute(new GetUserProfileByEmailQuery(email));\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { CqrsModule, QueryHandler } from '@nestjs/cqrs';\nimport { EventHandlers } from './handlers';\nimport { UserProfileModelModule } from '../../models/userProfiles/user-profile.module';\nimport { QueryHandlers } from './queries';\nimport { UserProfilesController } from './user-profiles.controller';\n\n@Module({\n  imports: [CqrsModule, UserProfileModelModule],\n  controllers: [UserProfilesController],\n  providers: [...EventHandlers, ...QueryHandlers],\n})\nexport class UserProfileViewModule {}\n","import { Module } from '@nestjs/common';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { UserProfileViewModule } from './userProfiles/user-profiles.module';\nimport { AdvertsViewModule } from './adverts/adverts.module';\nimport { PermissionsViewModule } from './permissions/permissions.module';\nimport { SettingsViewModule } from './settings/settings.module';\n\n@Module({\n  imports: [\n    CqrsModule,\n    AdvertsViewModule,\n    UserProfileViewModule,\n    SettingsViewModule,\n    PermissionsViewModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class ViewModule {}\n","require('dotenv').config();\nimport { NestFactory } from '@nestjs/core';\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\n\nimport { AppModule } from './app/app.module';\nimport { AllExceptionsFilter } from './app/common/filters/all-exception.filter';\nimport * as helmet from 'helmet';\nimport * as rateLimit from 'express-rate-limit';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  app.enableCors();\n\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const bodyParser = require('body-parser');\n  app.use(bodyParser.json({ limit: '5mb' }));\n  app.use(bodyParser.urlencoded({ limit: '5mb', extended: true }));\n  app.useGlobalFilters(new AllExceptionsFilter());\n\n  /* SECURITY */\n  app.use(helmet());\n\n  app.use(\n    rateLimit({\n      windowMs: 15 * 60 * 1000, // 15 minutes\n      max: 100, // limit each IP to 100 requests per windowMs\n      message: 'Too many requests from this IP, please try again later'\n    })\n  );\n  const createAccountLimiter = rateLimit({\n    windowMs: 60 * 60 * 1000, // 1 hour window\n    max: 3, // start blocking after 3 requests\n    message:\n      'Too many accounts created from this IP, please try again after an hour'\n  });\n  app.use('/api/auth/email/register', createAccountLimiter);\n\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n\n  const options = new DocumentBuilder()\n    .setTitle('PPR BE')\n    .setDescription('PPR BE')\n    .setVersion('1.0')\n    .addBearerAuth(\n    { type: 'http', scheme: 'bearer', bearerFormat: 'JWT' },\n    'JWT',\n    )\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup('api', app, document);\n\n  // const port = process.env.port || process.env.PORT;\n  // const host = process.env.host || process.env.HOST;\n\n  async function bootstrap() {\n    const app = await NestFactory.create(AppModule);\n    app.enableCors(); // protection\n    await app.listen(process.env.PORT || '80');\n  }\n}\nbootstrap();\n// async function bootstrap() {\n//   const app = await NestFactory.create(AppModule);\n//   await app.listen(process.env.PORT || 3000);\n// }\n// bootstrap();\n//   await app.listen(process.env.PORT, () => {\n//     console.log(\n//       'Listening at http://' + process.env.HOST + ':' + process.env.PORT + '/' + globalPrefix\n//     );\n//   });\n// }\n\n// bootstrap();\n","export * from './lib/common-main';\nexport * from './lib/routes-path';\nexport * from './lib/roles';\n","// TODO: Icons using like:\n// https://fontawesome.com/icons?d=gallery\n// <Icon className={item.icon} />\n// <Icon className={RouterMenuIcons.MENTOR} color=\"primary\" />\n// <Icon className={RouterMenuIcons.MENTOR} color=\"secondary\" />\n// <Icon className={RouterMenuIcons.MENTOR} style={{ color: green[500] }} />\n// <Icon className={RouterMenuIcons.MENTOR} fontSize=\"small\" />\n// <Icon className={RouterMenuIcons.MENTOR} style={{ fontSize: 30 }} />\nexport enum RouterMenuIcons {\n  MENTOR = 'fas fa-user-tie',\n}\n\nexport interface RouterItem {\n  path: string;\n  title: string;\n  icon: string;\n  component: any;\n  onMenu: boolean;\n}\n","export enum Roles {\n  USER = 'user',\n  MENTOR = 'mentor',\n  STUDENT = 'student',\n}\n","export enum PrivateRoutesPath {\n  DASHBOARD = 'dashboard',\n  DASHBOARD_MENTOR = '/mentor/:id',\n  MENTOR = 'mentor',\n  STUDENT = 'student',\n  ADVERTS = 'adverts',\n  SETTINGS = 'settings',\n  USER_PROFILES = 'user-profiles',\n  AUTH = 'auth',\n  GET_BY_ID = '/:id',\n  GET_ALL = '/all',\n\n  // TODO only for API\n  POST_CREATE = '/create',\n  POST_UPDATE = '/update/:id',\n  POST_DELETE = '/delete/:id',\n  GET_FIND_BY_ID = '/find-by-email',\n  POST_LOGIN = '/login',\n  POST_REGISTRY = '/registry',\n  POST_VERIFY = '/verify/:code',\n  POST_RESEND_VERIFY = '/resend-verification/:email',\n  POST_FORGOT_PASSWORD = '/forgot-password/:email',\n  POST_RESET_PASSWORD = '/reset-password',\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/cqrs\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-rate-limit\");","module.exports = require(\"helmet\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");","module.exports = require(\"nodemailer\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"path\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"tslib\");"],"sourceRoot":""}